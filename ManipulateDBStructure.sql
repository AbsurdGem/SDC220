-- 1. Eliminate STOREFRONT table without losing data
-- Step 1: Alter PRODUCTLIST to include PRICE and DESCRIPTION
ALTER TABLE PRODUCTLIST
ADD (PRICE NUMBER(8,2), DESCRIPTION VARCHAR2(250));
-- Step 2: Move PRICE and DESCRIPTION from STOREFRONT to PRODUCTLIST
UPDATE PRODUCTLIST p
SET (PRICE, DESCRIPTION) = (
    SELECT s.PRICE, s.DESCRIPTION
    FROM STOREFRONT s
    WHERE s.PRODUCTCODE = p.PRODUCTCODE
);
-- Step 3: Drop STOREFRONT table
DROP TABLE STOREFRONT;

-- 2. Create CHATLOG table and insert sample data
CREATE TABLE CHATLOG (
    CHATID NUMBER(3) PRIMARY KEY,
    RECEIVERID NUMBER(3),
    SENDERID NUMBER(3),
    DATESENT DATE,
    CONTENT VARCHAR2(250),
    CONSTRAINT fk_receiver FOREIGN KEY (RECEIVERID) REFERENCES USERBASE(USERID),
    CONSTRAINT fk_sender FOREIGN KEY (SENDERID) REFERENCES USERBASE(USERID)
);
-- Insert sample rows
INSERT INTO CHATLOG VALUES (1, 102, 101, SYSDATE, 'Hey, how are you?');
INSERT INTO CHATLOG VALUES (2, 101, 102, SYSDATE, 'Doing well, thanks!');
INSERT INTO CHATLOG VALUES (3, 103, 101, SYSDATE, 'Wanna play later?');
INSERT INTO CHATLOG VALUES (4, 104, 101, SYSDATE, 'GG on last match.');
INSERT INTO CHATLOG VALUES (5, 102, 103, SYSDATE, 'Need help with the quest?');
INSERT INTO CHATLOG VALUES (6, 105, 101, SYSDATE, 'What time are you online?');
INSERT INTO CHATLOG VALUES (7, 101, 105, SYSDATE, 'Around 8pm EST.');
INSERT INTO CHATLOG VALUES (8, 104, 102, SYSDATE, 'Check out the new update!');
INSERT INTO CHATLOG VALUES (9, 106, 101, SYSDATE, 'Invite me next time.');
INSERT INTO CHATLOG VALUES (10, 101, 106, SYSDATE, 'Sure thing!');
INSERT INTO CHATLOG VALUES (11, 102, 106, SYSDATE, 'Game night tomorrow?');
INSERT INTO CHATLOG VALUES (12, 106, 102, SYSDATE, 'Yep, let’s do it!');
-- 3. Create FRIENDSLIST table and insert sample data
CREATE TABLE FRIENDSLIST (
    USERID NUMBER(3),
    FRIENDID NUMBER(3),
    CONSTRAINT pk_friends PRIMARY KEY (USERID, FRIENDID),
    CONSTRAINT fk_user FOREIGN KEY (USERID) REFERENCES USERBASE(USERID),
    CONSTRAINT fk_friend FOREIGN KEY (FRIENDID) REFERENCES USERBASE(USERID)
);
-- Insert sample rows
INSERT INTO FRIENDSLIST VALUES (101, 102);
INSERT INTO FRIENDSLIST VALUES (101, 103);
INSERT INTO FRIENDSLIST VALUES (102, 101);
INSERT INTO FRIENDSLIST VALUES (102, 104);
INSERT INTO FRIENDSLIST VALUES (103, 101);
INSERT INTO FRIENDSLIST VALUES (103, 104);
INSERT INTO FRIENDSLIST VALUES (104, 105);
INSERT INTO FRIENDSLIST VALUES (105, 101);
INSERT INTO FRIENDSLIST VALUES (106, 101);
INSERT INTO FRIENDSLIST VALUES (106, 102);
INSERT INTO FRIENDSLIST VALUES (105, 106);
-- 4. Create WISHLIST table and insert sample data
CREATE TABLE WISHLIST (
    USERID NUMBER(3),
    PRODUCTCODE VARCHAR2(5),
    POSITION NUMBER(3),
    CONSTRAINT pk_wishlist PRIMARY KEY (USERID, PRODUCTCODE),
    CONSTRAINT fk_w_user FOREIGN KEY (USERID) REFERENCES USERBASE(USERID),
    CONSTRAINT fk_w_product FOREIGN KEY (PRODUCTCODE) REFERENCES PRODUCTLIST(PRODUCTCODE)
);
-- Insert sample rows
INSERT INTO WISHLIST VALUES (101, 'P001', 1);
INSERT INTO WISHLIST VALUES (101, 'P002', 2);
INSERT INTO WISHLIST VALUES (102, 'P003', 1);
INSERT INTO WISHLIST VALUES (102, 'P004', 2);
INSERT INTO WISHLIST VALUES (103, 'P002', 1);
INSERT INTO WISHLIST VALUES (104, 'P005', 1);
INSERT INTO WISHLIST VALUES (105, 'P006', 1);
INSERT INTO WISHLIST VALUES (105, 'P007', 2);
INSERT INTO WISHLIST VALUES (106, 'P008', 1);
INSERT INTO WISHLIST VALUES (106, 'P001', 2);
-- 5. Create USERPROFILE table and insert sample data
CREATE TABLE USERPROFILE (
    USERID NUMBER(3) PRIMARY KEY,
    IMAGEFILE VARCHAR2(250),
    DESCRIPTION VARCHAR2(250),
    CONSTRAINT fk_profile_user FOREIGN KEY (USERID) REFERENCES USERBASE(USERID)
);
-- Insert sample rows
INSERT INTO USERPROFILE VALUES (101, 'profile101.png', 'Casual gamer, loves RPGs.');
INSERT INTO USERPROFILE VALUES (102, 'profile102.jpg', 'Competitive FPS player.');
INSERT INTO USERPROFILE VALUES (103, 'profile103.png', 'Enjoys co-op adventures.');
INSERT INTO USERPROFILE VALUES (104, 'profile104.jpg', 'Retro gaming fan.');
INSERT INTO USERPROFILE VALUES (105, 'profile105.png', 'Streamer and content creator.');
INSERT INTO USERPROFILE VALUES (106, 'profile106.jpg', 'Sports and racing gamer.');
-- 6. Create SECURITYQUESTION table and insert sample data
CREATE TABLE SECURITYQUESTION (
    QUESTIONID NUMBER PRIMARY KEY,
    USERID NUMBER(3),
    QUESTION VARCHAR2(250),
    ANSWER VARCHAR2(250),
    CONSTRAINT fk_sq_user FOREIGN KEY (USERID) REFERENCES USERBASE(USERID)
);
-- Insert sample rows
INSERT INTO SECURITYQUESTION VALUES (1, 101, 'What is your mother’s maiden name?', 'Smith');
INSERT INTO SECURITYQUESTION VALUES (2, 102, 'What was your first pet’s name?', 'Buddy');
INSERT INTO SECURITYQUESTION VALUES (3, 103, 'What is your favorite color?', 'Blue');
INSERT INTO SECURITYQUESTION VALUES (4, 104, 'What is your favorite game?', 'Zelda');
INSERT INTO SECURITYQUESTION VALUES (5, 105, 'What city were you born in?', 'Boston');
INSERT INTO SECURITYQUESTION VALUES (6, 106, 'What was your childhood nickname?', 'Ace');
-- 7. Create COMMUNITYRULES table and insert sample data
CREATE TABLE COMMUNITYRULES (
    RULENUM NUMBER(3) PRIMARY KEY,
    TITLE VARCHAR2(250),
    DESCRIPTION VARCHAR2(250),
    SEVERITYPOINT NUMBER(4)
);
-- Insert sample rows
INSERT INTO COMMUNITYRULES VALUES (1, 'No Harassment', 'Respect all players, no bullying.', 10);
INSERT INTO COMMUNITYRULES VALUES (2, 'No Cheating', 'Use of cheats or exploits is forbidden.', 15);
INSERT INTO COMMUNITYRULES VALUES (3, 'No Spam', 'Avoid repetitive or irrelevant posts.', 5);
INSERT INTO COMMUNITYRULES VALUES (4, 'No Hate Speech', 'Discriminatory language is prohibited.', 20);
INSERT INTO COMMUNITYRULES VALUES (5, 'No Impersonation', 'Do not impersonate other users.', 8);
INSERT INTO COMMUNITYRULES VALUES (6, 'Respect Moderators', 'Follow moderator directions.', 12);
-- 8. Create INFRACTIONS table and insert sample data
CREATE TABLE INFRACTIONS (
    INFRACTIONID NUMBER PRIMARY KEY,
    USERID NUMBER(3),
    RULENUM NUMBER(3),
    DATEASSIGNED DATE,
    PENALTY VARCHAR2(250),
    CONSTRAINT fk_inf_user FOREIGN KEY (USERID) REFERENCES USERBASE(USERID),
    CONSTRAINT fk_inf_rule FOREIGN KEY (RULENUM) REFERENCES COMMUNITYRULES(RULENUM)
);
-- Insert sample rows
INSERT INTO INFRACTIONS VALUES (1, 101, 1, SYSDATE, 'Warning issued');
INSERT INTO INFRACTIONS VALUES (2, 102, 2, SYSDATE, '1 week ban');
INSERT INTO INFRACTIONS VALUES (3, 103, 3, SYSDATE, 'Muted for 24 hours');
INSERT INTO INFRACTIONS VALUES (4, 104, 4, SYSDATE, 'Permanent ban');
INSERT INTO INFRACTIONS VALUES (5, 105, 5, SYSDATE, 'Warning issued');
INSERT INTO INFRACTIONS VALUES (6, 106, 6, SYSDATE, '1 day suspension');
-- 9. Create USERSUPPORT table and insert sample data
CREATE TABLE USERSUPPORT (
    TICKETID NUMBER PRIMARY KEY,
    EMAIL VARCHAR2(250),
    ISSUE VARCHAR2(250),
    DATESUBMITTED DATE,
    DATEUPDATED DATE,
    STATUS VARCHAR2(250)
);
-- Insert sample rows
INSERT INTO USERSUPPORT VALUES (1, 'user101@email.com', 'Game crashes on startup', SYSDATE-5, SYSDATE-1, 'NEW');
INSERT INTO USERSUPPORT VALUES (2, 'user102@email.com', 'Password reset not working', SYSDATE-10, SYSDATE-2, 'IN PROGRESS');
INSERT INTO USERSUPPORT VALUES (3, 'user103@email.com', 'Unable to join friend lobby', SYSDATE-7, SYSDATE-3, 'CLOSED');
INSERT INTO USERSUPPORT VALUES (4, 'user104@email.com', 'Purchase not received', SYSDATE-6, SYSDATE-2, 'NEW');
INSERT INTO USERSUPPORT VALUES (5, 'user105@email.com', 'Bug in leaderboard', SYSDATE-8, SYSDATE-1, 'IN PROGRESS');
INSERT INTO USERSUPPORT VALUES (6, 'user106@email.com', 'Account locked out', SYSDATE-12, SYSDATE-4, 'CLOSED');
-- 10. Create useful views
-- View of unique SECURITY QUESTIONS
CREATE OR REPLACE VIEW vw_unique_questions AS
SELECT DISTINCT QUESTION
FROM SECURITYQUESTION;
-- View of support tickets with NEW or IN PROGRESS status
CREATE OR REPLACE VIEW vw_active_tickets AS
SELECT TICKETID, EMAIL, ISSUE, DATEUPDATED
FROM USERSUPPORT
WHERE STATUS IN ('NEW', 'IN PROGRESS')
ORDER BY DATEUPDATED ASC;

